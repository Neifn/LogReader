#!/bin/bash
#Log creation script
LOGREADERPID=/var/run/logreader/logreader.pid
LOGREADERLOG=/var/log/logreader.log
LOGREADERCONF=/etc/logreader.conf
LOCKDIR=$( dirname $LOGREADERPID )

logreader()
{
  PATHTOLOG=$( echo $1 | sed 's/\(.*\)\:.*/\1/' )
  SERVERIP=$( echo $1 | sed 's/.*\:\(.*\)\,.*/\1/' )
  CHECKPERIOD=$( echo $1 | sed 's/.*\,\(.*\)\;.*/\1/' )
  SSHLOGDIR=$( echo $1 | sed 's/.*\;\(.*\)/\1/' )
  ARCHIVE=$( basename $PATHTOLOG )
  PATHDIR=$( dirname $PATHTOLOG ) 
  
  while true
  do
    touch ${LOCKDIR}/${BASHPID}.lock
    CURRENTTIME=$( date +"%Y%m%d%H%M" )
    if [ -s $PATHTOLOG ]
    then
      mv $PATHTOLOG ${PATHTOLOG}-${CURRENTTIME}
      tar -czf ${PATHDIR}/${ARCHIVE}-${CURRENTTIME}.tar.gz -C ${PATHDIR} ${ARCHIVE}-${CURRENTTIME}
      rm ${PATHTOLOG}-${CURRENTTIME}
      echo "${CURRENTTIME} archive ${PATHDIR}/${ARCHIVE}-${CURRENTTIME}.tar.gz created" >> $LOGREADERLOG
      ssh $SERVERIP mkdir -p $SSHLOGDIR
      scp ${PATHDIR}/${ARCHIVE}-${CURRENTTIME}.tar.gz ${SERVERIP}:${SSHLOGDIR}
      ssh $SERVERIP tar -xzf ${SSHLOGDIR}/${ARCHIVE}-${CURRENTTIME}.tar.gz -C ${SSHLOGDIR}
      ssh $SERVERIP rm ${SSHLOGDIR}/${ARCHIVE}-${CURRENTTIME}.tar.gz
      echo "${CURRENTTIME} archive ${PATHDIR}/${ARCHIVE}-${CURRENTTIME}.tar.gz copied to remote client ${SERVERIP}" >> $LOGREADERLOG
      rm $PATHTOLOG
    else
      echo "${CURRENTTIME} No logs are present for ${PATHTOLOG}" >> $LOGREADERLOG
      ssh $SERVERIP echo "${CURRENTTIME} No logs are present for ${PATHTOLOG}" > ${ARCHIVE}-${CURRENTTIME}
    fi
    rm ${LOCKDIR}/${BASHPID}.lock
    sleep $(( CHECKPERIOD * 60 )
  done
}

logstart()
{
  if [ -f $LOGREADERPID ]
  then
    cat $LOGREADERPID | while read line
    do
      if ps -eo pid | grep $line
      then
        echo "application already running please use stop or restart argument"
        exit 0
      fi
    done
    rm $LOGREADERPID
  fi
  cat $LOGREADERCONF | while read line
  do
    if [[ ${line:0:1} != '#' ]]
    then
      logreader $line &
      echo $! >> $LOGREADERPID
    fi 
  done
  echo "application is started"
}

logstop ()
{
  if ! [ -f $LOGREADERPID ]
  then
    echo "application is not running"
    exit 0
  fi
  cat $LOGREADERPID | while read line
  do
    if ps -eo pid | grep $line
    then
      while [ -f ${LOCKDIR}/${line}.lock ]
      do
        sleep 2  
      done
      kill $line
    fi
  done
  rm -rf $LOGREADERPID
  echo "application is stoped"
}

case $1 in
  start)
    logstart
  ;;
  stop)
    logstop
  ;;
  restart)
    logstop
    logstart
  ;;
  *)
    echo "invalid arg use --help to get the list of commands"
    exit 1
  ;;
  --help)
    echo "use 'start' to start the application, 'stop' to stop it and 'restart' to restart"
  ;;
esac

